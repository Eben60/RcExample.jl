row = -1: error opening of processing data file
Errored: ErrorException("/Users/elk/Julia/RelaxationExample.jl/src/../data/BrokenData.xlsx does not have a Worksheet named data.")
-------- backtrace --------
error(s::String) at error.jl:35
getsheet(wb::XLSX.Workbook, sheetname::String) at workbook.jl:51
getsheet at workbook.jl:55 [inlined]
#29 at read.jl:605 [inlined]
openxlsx(f::XLSX.var"#29#30"{Nothing, Nothing, Bool, Bool, Bool, Nothing, Bool, String}, source::String; mode::String, enable_cache::Bool) at read.jl:141
openxlsx at read.jl:128 [inlined]
#readtable#28 at read.jl:604 [inlined]
kwcall(::@NamedTuple{infer_eltypes::Bool}, ::typeof(XLSX.readtable), source::String, sheet::String) at read.jl:603
_readdata(fl::String) at RelaxationExample.jl:63
_proc_data(xlfile::String, datafile::Nothing, paramsets::Vector{NamedTuple{(:area, :Vunit, :timeunit, :Cunit, :R, :t_start, :t_stop, :ϵ, :no, :plot_annotation, :comment)}}; throwonerr::Bool) at RelaxationExample.jl:92
_proc_data(xlfile::String, datafile::Nothing, paramsets::Vector{NamedTuple{(:area, :Vunit, :timeunit, :Cunit, :R, :t_start, :t_stop, :ϵ, :no, :plot_annotation, :comment)}}) at RelaxationExample.jl:86
top-level scope at eval_multiexp_SimpleNonlinearSolve.jl:22
eval at boot.jl:385 [inlined]
include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String) at loading.jl:2076
include_string(m::Module, txt::String, fname::String) at loading.jl:2086
invokelatest(::Any, ::Any, ::Vararg{Any}; kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}) at essentials.jl:892
invokelatest(::Any, ::Any, ::Vararg{Any}) at essentials.jl:889
inlineeval(m::Module, code::String, code_line::Int64, code_column::Int64, file::String; softscope::Bool) at eval.jl:263
kwcall(::@NamedTuple{softscope::Bool}, ::typeof(VSCodeServer.inlineeval), m::Module, code::String, code_line::Int64, code_column::Int64, file::String) at eval.jl:260
(::VSCodeServer.var"#69#74"{Bool, Bool, Bool, Module, String, Int64, Int64, String, VSCodeServer.ReplRunCodeRequestParams})() at eval.jl:181
withpath(f::VSCodeServer.var"#69#74"{Bool, Bool, Bool, Module, String, Int64, Int64, String, VSCodeServer.ReplRunCodeRequestParams}, path::String) at repl.jl:274
(::VSCodeServer.var"#68#73"{Bool, Bool, Bool, Module, String, Int64, Int64, String, VSCodeServer.ReplRunCodeRequestParams})() at eval.jl:179
hideprompt(f::VSCodeServer.var"#68#73"{Bool, Bool, Bool, Module, String, Int64, Int64, String, VSCodeServer.ReplRunCodeRequestParams}) at repl.jl:38
(::VSCodeServer.var"#67#72"{Bool, Bool, Bool, Module, String, Int64, Int64, String, VSCodeServer.ReplRunCodeRequestParams})() at eval.jl:150
with_logstate(f::Function, logstate::Any) at logging.jl:515
with_logger at logging.jl:627 [inlined]
(::VSCodeServer.var"#66#71"{VSCodeServer.ReplRunCodeRequestParams})() at eval.jl:255
#invokelatest#2 at essentials.jl:892 [inlined]
invokelatest(::Any) at essentials.jl:889
(::VSCodeServer.var"#64#65")() at eval.jl:34
________________________________________________________________________________

